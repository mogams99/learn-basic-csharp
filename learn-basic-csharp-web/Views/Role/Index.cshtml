@model learn_basic_csharp_web.Models.RoleVM.Index
@{
    ViewData["Title"] = "Role Page";
}

<div class="d-flex justify-content-between py-3">
    <h1>Role Page</h1>
    <button type="button" class="btn btn-sm btn-success" onclick="fnAdd()">Add</button>
</div>

<div class="table-responsive text-center">
    <table id="roleTable" class="table table-bordered">
        <thead>
            <tr>
                <th>#</th>
                <th>Name</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Roles)
            {
                <tr>
                    <td>@(item.Id)</td>
                    <td>@(item.Name)</td>
                    <td>
                        <button type="button" class="btn btn-sm btn-primary" onclick="fnEdit('@(item.Id)')">Edit</button>
                        <button type="button" class="btn btn-sm btn-danger" onclick="fnDelete('@(item.Id)')">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        const fnAdd = () => {
            $.ajax({
                url: '@Url.Action("Add", "Role")',
                type: 'GET',
                success: function (data) {
                    if (data.Status === undefined) {
                        $("#modalPart .modal-title").html("Add Role");
                        $("#modalPart .modal-body").html(data);
                        $("#modalPart").modal('show');
                    } else {
                        swal.fire({
                            icon: 'warning',
                            title: '<b style="color:orange">Peringatan</b>',
                            text: data.Message
                        })
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log('Error: ' + errorThrown);
                }
            });
        }

        const fnEdit = (id) => {
            $.ajax({
                url: '@Url.Action("Edit", "Role")',
                type: 'GET',
                data: { id },
                success: function (data) {
                    if (data.Status === undefined) {
                        $("#modalPart .modal-title").html("Edit Role");
                        $("#modalPart .modal-body").html(data);
                        $("#modalPart").modal('show');
                    } else {
                        swal.fire({
                            icon: 'warning',
                            title: '<b style="color:orange">Peringatan</b>',
                            text: data.Message
                        })
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log('Error: ' + errorThrown);
                }
            });
        }

        const fnDelete = (id) => {
            swal.fire({
                title: 'Anda yakin?',
                text: "Data akan dihapus secara permanen!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Ya, hapus!',
                cancelButtonText: 'Batal'
            }).then(res => {
                if (res.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("Delete", "Role")',
                        type: 'DELETE',
                        data: { id },
                        success: function (data) {
                            if (data.status == true) {
                                Swal.fire({
                                    icon: 'success',
                                    title: '<b>Info</b>',
                                    text: data.message,
                                }).then((q) => {
                                    window.location.reload()
                                })
                            }
                            else {
                                Swal.fire({
                                    icon: 'warning',
                                    title: '<b style="color:orange">Peringatan</b>',
                                    text: data.message,
                                })
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            Swal.fire({
                                icon: 'error',
                                title: '<b>Error</b>',
                                text: 'An error occurred while processing your request.',
                            });
                        }
                    });
                }
            })
        }

        const fnSave = (action) => {
            console.log(action);
            let type = action == "edit" ? "PUT" : "POST";
            let formData = new FormData($(`#${action}-form`)[0]);
            let t = $("input[name='__RequestVerificationToken']").val();

            $.ajax({
                url: $(`#${action}-form`).attr('action'),
                type,
                data: formData,
                dataType: "json",
                contentType: false,
                processData: false,
                headers:
                {
                    "RequestVerificationToken": t
                },
                beforeSend: function () {
                    $("#loading1").show()
                },
                complete: function () { $("#loading1").hide(); },
                success: function (data) {
                    if (data.status == true) {
                        Swal.fire({
                            icon: 'success',
                            title: '<b>Info</b>',
                            text: data.message,
                        }).then((q) => {
                            window.location.reload()
                        })
                    }
                    else {
                        Swal.fire({
                            icon: 'warning',
                            title: '<b style="color:orange">Peringatan</b>',
                            text: data.message,
                        })
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    Swal.fire({
                        icon: 'error',
                        title: '<b>Error</b>',
                        text: 'An error occurred while processing your request.',
                    });
                }
            })
        }
    </script>
}
